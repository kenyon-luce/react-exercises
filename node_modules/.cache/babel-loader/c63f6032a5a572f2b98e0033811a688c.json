{"ast":null,"code":"var _jsxFileName = \"/Users/kenyonluce/IdeaProjects/react-exercises/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport NoImage from '../images/no_image.jpg';\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  //using brackets because we want to include logic for fetching info from the API\n  const {\n    movieId\n  } = useParams(); //gives us the id of the movie so we can get info for that soecific movie\n\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  const {\n    state: credits\n  } = useMovieFetch(movieId); //you can change the name of a property using ':'\n\n  console.log(credits);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movie, \"kcv5abwfnQCiuhgI4jP/+3CwxQo=\", false, function () {\n  return [useParams, useMovieFetch, useMovieFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/kenyonluce/IdeaProjects/react-exercises/src/components/Movie.js"],"names":["React","useParams","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","Grid","Spinner","NoImage","useMovieFetch","Movie","movieId","state","movie","loading","error","credits","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,EAAiBC,cAAjB,EAAiCC,WAAjC,QAAmD,WAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAE;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAYT,SAAS,EAA3B,CADgB,CACe;;AAE/B,QAAM;AAACU,IAAAA,KAAK,EAAEC,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAiCN,aAAa,CAACE,OAAD,CAApD;AACA,QAAM;AAACC,IAAAA,KAAK,EAAEI;AAAR,MAAmBP,aAAa,CAACE,OAAD,CAAtC,CAJgB,CAKhB;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAZD;;GAAMN,K;UACgBR,S,EAEqBO,a,EACdA,a;;;KAJvBC,K;AAcN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport {useParams} from 'react-router-dom';\nimport {API_KEY, IMAGE_BASE_URL, POSTER_SIZE} from \"../config\";\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport NoImage from '../images/no_image.jpg';\nimport {useMovieFetch} from \"../hooks/useMovieFetch\";\n\nconst Movie = () => { //using brackets because we want to include logic for fetching info from the API\n    const {movieId} = useParams(); //gives us the id of the movie so we can get info for that soecific movie\n\n    const {state: movie, loading, error} = useMovieFetch(movieId);\n    const {state: credits} = useMovieFetch(movieId)\n    //you can change the name of a property using ':'\n    console.log(credits);\n    return (\n        <>\n            <div>Movie</div>\n        </>\n    )\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}