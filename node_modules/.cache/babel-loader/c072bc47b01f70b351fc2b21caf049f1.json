{"ast":null,"code":"var _jsxFileName = \"/Users/kenyonluce/IdeaProjects/react-exercises/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //importing API\n\nimport API from '../API'; //importing config.js\n\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\"; //importing components\n//importing hook\n//importing image (default image)\n\nimport DefaultImage from '../images/no_image.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  //importing and using use state gives us an array of boolean or \"state\" values\n  const [state, setState] = useState(); //set default to false\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    //async function lets us grab information from our api\n    //searchTerm will use a state value but when a search term isn't passed in it will default to an empty string as defined in the parameter\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      console.log(movies);\n      setState(prev => ({ //returning an object\n        ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results] //^^the \"...\" is used to grab all of the requested results and \"spread\" it into the results array. Appends a new list of movies to the previous list if a page is greater than 1\n\n      }));\n    } catch (error) {\n      setError(true);\n    }\n  }; //initial render (first page)\n\n\n  useEffect(() => {\n    fetchMovies(1);\n  }, []); //^^since we didn't define what we are searching for, the first page returns the most popular movies currently (as declared in API.js ln 19-24)\n  //*each page can have up to 1000 results\n  // useEffect(() => {\n  //     fetchMovies(1, \"search\")\n  // }, [])\n  // //^^returns first page of movies containing the word (\"search\") in their title\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Home Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}; //ALWAYS EXPORT the component so it can be compiled correctly\n\n\n_s(Home, \"/YnvvaV0tprPxXgjnSDjNMwznNs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kenyonluce/IdeaProjects/react-exercises/src/components/Home.js"],"names":["React","useState","useEffect","API","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","DefaultImage","Home","state","setState","loading","setLoading","error","setError","fetchMovies","page","searchTerm","movies","console","log","prev","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,aAArB,EAAoCC,cAApC,QAAyD,WAAzD,C,CACA;AAEA;AAEA;;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC,CAHe,CAGuB;;AACtC,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMc,WAAW,GAAG,OAAOC,IAAP,EAAaC,UAAU,GAAG,EAA1B,KAAiC;AACjD;AACA;AACA,QAAG;AACCH,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMM,MAAM,GAAG,MAAMf,GAAG,CAACY,WAAJ,CAAgBE,UAAhB,EAA4BD,IAA5B,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAR,MAAAA,QAAQ,CAACW,IAAI,KAAK,EAAE;AAChB,WAAGH,MADW;AAEdI,QAAAA,OAAO,EACHN,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGK,IAAI,CAACC,OAAT,EAAkB,GAAGJ,MAAM,CAACI,OAA5B,CAAX,GAAkD,CAAC,GAAGJ,MAAM,CAACI,OAAX,CAHxC,CAId;;AAJc,OAAL,CAAL,CAAR;AAMH,KAbD,CAaE,OAAOT,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAnBD,CAPe,CA2Bf;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT,CA5Be,CA+Bf;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAxCD,C,CA0CA;;;GA1CMP,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n//importing API\nimport API from '../API'\n//importing config.js\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from \"../config\";\n//importing components\n\n//importing hook\n\n//importing image (default image)\nimport DefaultImage from '../images/no_image.jpg';\n\nconst Home = () => {\n    //importing and using use state gives us an array of boolean or \"state\" values\n\n    const [state, setState] = useState(); //set default to false\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        //async function lets us grab information from our api\n        //searchTerm will use a state value but when a search term isn't passed in it will default to an empty string as defined in the parameter\n        try{\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n            console.log(movies);\n\n            setState(prev => ({ //returning an object\n                ...movies,\n                results:\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n                //^^the \"...\" is used to grab all of the requested results and \"spread\" it into the results array. Appends a new list of movies to the previous list if a page is greater than 1\n            }))\n        } catch (error) {\n            setError(true);\n        }\n    }\n    //initial render (first page)\n    useEffect(() => {\n        fetchMovies(1)\n    }, [])\n    //^^since we didn't define what we are searching for, the first page returns the most popular movies currently (as declared in API.js ln 19-24)\n    //*each page can have up to 1000 results\n\n    // useEffect(() => {\n    //     fetchMovies(1, \"search\")\n    // }, [])\n    // //^^returns first page of movies containing the word (\"search\") in their title\n\n    return <div>Home Page</div>\n}\n\n//ALWAYS EXPORT the component so it can be compiled correctly\nexport default Home;"]},"metadata":{},"sourceType":"module"}