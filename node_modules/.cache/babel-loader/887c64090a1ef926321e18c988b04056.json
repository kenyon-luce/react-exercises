{"ast":null,"code":"import { useRef, useState, useLayoutEffect, createElement, forwardRef, useCallback, useMemo } from 'react';\nimport { createBrowserHistory, createHashHistory, createPath } from 'history';\nimport { Router, useHref, useNavigate, useLocation, useResolvedPath, useBlocker } from 'react-router';\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, UNSAFE_LocationContext, UNSAFE_NavigatorContext, UNSAFE_RouteContext, createRoutesFromArray, createRoutesFromChildren, generatePath, matchPath, matchRoutes, resolvePath, useBlocker, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useOutlet, useParams, useResolvedPath, useRoutes } from 'react-router';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar _excluded = [\"onClick\", \"replace\", \"state\", \"target\", \"to\"],\n    _excluded2 = [\"aria-current\", \"activeClassName\", \"activeStyle\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\"];\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  var children = _ref.children,\n      window = _ref.window;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = useState({\n    action: history.action,\n    location: history.location\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    children: children,\n    action: state.action,\n    location: state.location,\n    navigator: history\n  });\n}\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  var children = _ref2.children,\n      window = _ref2.window;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState2 = useState({\n    action: history.action,\n    location: history.location\n  }),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    children: children,\n    action: state.action,\n    location: state.location,\n    navigator: history\n  });\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = /*#__PURE__*/forwardRef(function LinkWithRef(_ref3, ref) {\n  var onClick = _ref3.onClick,\n      _ref3$replace = _ref3.replace,\n      replaceProp = _ref3$replace === void 0 ? false : _ref3$replace,\n      state = _ref3.state,\n      target = _ref3.target,\n      to = _ref3.to,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n  var href = useHref(to);\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to);\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // Ignore everything but left clicks\n    !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here.\n\n      var replace = !!replaceProp || createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state\n      });\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/forwardRef(function NavLinkWithRef(_ref4, ref) {\n  var _ref4$ariaCurrent = _ref4[\"aria-current\"],\n      ariaCurrentProp = _ref4$ariaCurrent === void 0 ? \"page\" : _ref4$ariaCurrent,\n      _ref4$activeClassName = _ref4.activeClassName,\n      activeClassName = _ref4$activeClassName === void 0 ? \"active\" : _ref4$activeClassName,\n      activeStyle = _ref4.activeStyle,\n      _ref4$caseSensitive = _ref4.caseSensitive,\n      caseSensitive = _ref4$caseSensitive === void 0 ? false : _ref4$caseSensitive,\n      _ref4$className = _ref4.className,\n      classNameProp = _ref4$className === void 0 ? \"\" : _ref4$className,\n      _ref4$end = _ref4.end,\n      end = _ref4$end === void 0 ? false : _ref4$end,\n      styleProp = _ref4.style,\n      to = _ref4.to,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  var locationPathname = location.pathname;\n  var toPathname = path.pathname;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    toPathname = toPathname.toLowerCase();\n  }\n\n  var isActive = end ? locationPathname === toPathname : locationPathname.startsWith(toPathname);\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className = [classNameProp, isActive ? activeClassName : null].filter(Boolean).join(\" \");\n\n  var style = _extends({}, styleProp, isActive ? activeStyle : null);\n\n  return /*#__PURE__*/createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A declarative interface for showing a window.confirm dialog with the given\n * message when the user tries to navigate away from the current page.\n *\n * This also serves as a reference implementation for anyone who wants to\n * create their own custom prompt component.\n */\n\n\nfunction Prompt(_ref5) {\n  var message = _ref5.message,\n      when = _ref5.when;\n  usePrompt(message, when);\n  return null;\n} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Prevents navigation away from the current page using a window.confirm prompt\n * with the given message.\n */\n\n\nfunction usePrompt(message, when) {\n  if (when === void 0) {\n    when = true;\n  }\n\n  var blocker = useCallback(function (tx) {\n    if (window.confirm(message)) tx.retry();\n  }, [message]);\n  useBlocker(blocker, when);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = useMemo(function () {\n    var searchParams = createSearchParams(location.search);\n\n    var _loop = function _loop() {\n      var key = _step.value;\n\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(defaultSearchParamsRef.current.keys()), _step; !(_step = _iterator()).done;) {\n      _loop();\n    }\n\n    return searchParams;\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = useCallback(function (nextInit, navigateOptions) {\n    navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n  }, [navigate]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink, Prompt, createSearchParams, usePrompt, useSearchParams };","map":{"version":3,"sources":["../../packages/react-router-dom/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA,SAAA,OAAA,CAAA,IAAA,EAAA,OAAA,EAAA;;;wCAGwC,OAAA,CAAA,IAAA,CAAA,OAAA;;;;;;;;;;;;;;;;;;SA0LxB,a,CAAA,I,EAAA;MAAgB,QAAA,GAAA,IAAA,CAAA,Q;;;;AAa/B,MAAA,UAAA,CAAA,OAAA,IAAA,IAAA,EAAA;AAEG,IAAA,UAAA,CAAA,OAAA,GAAA,oBAAA,CAAA;;AAAA,KAAA,CAAA;;;;;;;;;;;;;;;sBAkBF,aAAA,CAAA,MAAA,EAAO;cAAA,QAAA;kBAAA,MAAA;oBAAA,QAAA;;AAAA,GAAP,C;;;;;;;;;;;;;MA0BI,UAAU,CAAV,OAAA,IAAA,I,EAAA;AACJ,IAAA,UAAA,CAAA,OAAA,GAAA,iBAAA,CAAA;;AAAA,KAAA,CAAA;;;;;;;;;;;;;WAc0B,OAAA,CAAA,MAAA,CAAA,QAAA,C;;;cAKlB,Q;;;eAGD;;;;;6CAUH,KAAA,CAAA,O,IAAA,KAAA,CAAA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;qBA6CgB,KAAA,O,KAAA;AAClB,KAAA,eAAgB,CAAA,KAAA,C,CAAA;MACd;AACA,MAAA,KAAA,CADA,cACA,GADA,CAAA;AAME","sourcesContent":["import { useRef, useState, useLayoutEffect, createElement, forwardRef, useCallback, useMemo } from 'react';\nimport { createBrowserHistory, createHashHistory, createPath } from 'history';\nimport { Router, useHref, useNavigate, useLocation, useResolvedPath, useBlocker } from 'react-router';\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, UNSAFE_LocationContext, UNSAFE_NavigatorContext, UNSAFE_RouteContext, createRoutesFromArray, createRoutesFromChildren, generatePath, matchPath, matchRoutes, resolvePath, useBlocker, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useOutlet, useParams, useResolvedPath, useRoutes } from 'react-router';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar _excluded = [\"onClick\", \"replace\", \"state\", \"target\", \"to\"],\n    _excluded2 = [\"aria-current\", \"activeClassName\", \"activeStyle\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\"];\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} ////////////////////////////////////////////////////////////////////////////////\n/**\n * A <Router> for use in web browsers. Provides the cleanest URLs.\n */\n\nfunction BrowserRouter(_ref) {\n  var children = _ref.children,\n      window = _ref.window;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = useState({\n    action: history.action,\n    location: history.location\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    children: children,\n    action: state.action,\n    location: state.location,\n    navigator: history\n  });\n}\n/**\n * A <Router> for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  var children = _ref2.children,\n      window = _ref2.window;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState2 = useState({\n    action: history.action,\n    location: history.location\n  }),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    children: children,\n    action: state.action,\n    location: state.location,\n    navigator: history\n  });\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = /*#__PURE__*/forwardRef(function LinkWithRef(_ref3, ref) {\n  var onClick = _ref3.onClick,\n      _ref3$replace = _ref3.replace,\n      replaceProp = _ref3$replace === void 0 ? false : _ref3$replace,\n      state = _ref3.state,\n      target = _ref3.target,\n      to = _ref3.to,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n  var href = useHref(to);\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to);\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // Ignore everything but left clicks\n    !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ) {\n        event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n\n        var replace = !!replaceProp || createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace,\n          state: state\n        });\n      }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/forwardRef(function NavLinkWithRef(_ref4, ref) {\n  var _ref4$ariaCurrent = _ref4[\"aria-current\"],\n      ariaCurrentProp = _ref4$ariaCurrent === void 0 ? \"page\" : _ref4$ariaCurrent,\n      _ref4$activeClassName = _ref4.activeClassName,\n      activeClassName = _ref4$activeClassName === void 0 ? \"active\" : _ref4$activeClassName,\n      activeStyle = _ref4.activeStyle,\n      _ref4$caseSensitive = _ref4.caseSensitive,\n      caseSensitive = _ref4$caseSensitive === void 0 ? false : _ref4$caseSensitive,\n      _ref4$className = _ref4.className,\n      classNameProp = _ref4$className === void 0 ? \"\" : _ref4$className,\n      _ref4$end = _ref4.end,\n      end = _ref4$end === void 0 ? false : _ref4$end,\n      styleProp = _ref4.style,\n      to = _ref4.to,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n\n  var location = useLocation();\n  var path = useResolvedPath(to);\n  var locationPathname = location.pathname;\n  var toPathname = path.pathname;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    toPathname = toPathname.toLowerCase();\n  }\n\n  var isActive = end ? locationPathname === toPathname : locationPathname.startsWith(toPathname);\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className = [classNameProp, isActive ? activeClassName : null].filter(Boolean).join(\" \");\n\n  var style = _extends({}, styleProp, isActive ? activeStyle : null);\n\n  return /*#__PURE__*/createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A declarative interface for showing a window.confirm dialog with the given\n * message when the user tries to navigate away from the current page.\n *\n * This also serves as a reference implementation for anyone who wants to\n * create their own custom prompt component.\n */\n\n\nfunction Prompt(_ref5) {\n  var message = _ref5.message,\n      when = _ref5.when;\n  usePrompt(message, when);\n  return null;\n} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Prevents navigation away from the current page using a window.confirm prompt\n * with the given message.\n */\n\nfunction usePrompt(message, when) {\n  if (when === void 0) {\n    when = true;\n  }\n\n  var blocker = useCallback(function (tx) {\n    if (window.confirm(message)) tx.retry();\n  }, [message]);\n  useBlocker(blocker, when);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = useMemo(function () {\n    var searchParams = createSearchParams(location.search);\n\n    var _loop = function _loop() {\n      var key = _step.value;\n\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(defaultSearchParamsRef.current.keys()), _step; !(_step = _iterator()).done;) {\n      _loop();\n    }\n\n    return searchParams;\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = useCallback(function (nextInit, navigateOptions) {\n    navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n  }, [navigate]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink, Prompt, createSearchParams, usePrompt, useSearchParams };\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"module"}