{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import API from '../API';\n\nexport const useMovieFetch = movieId => {\n  _s();\n\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState({});\n  const [error, setError] = useState({});\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await API.fetchMovies(movieId);\n        const credits = await API.fetchCredits(movieId); //Directors only\n\n        const directors = credits.crew.filter(member => member.job === 'Director'); //exporting state object\n\n        setState({ ...movie,\n          actors: credits.cast,\n          directors\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useMovieFetch, \"PYbx7qX035kU1ANsLRj4K6jaYmQ=\");","map":{"version":3,"sources":["/Users/kenyonluce/IdeaProjects/react-exercises/src/hooks/useMovieFetch.js"],"names":["useState","useEffect","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchMovie","movie","API","fetchMovies","credits","fetchCredits","directors","crew","filter","member","job","actors","cast"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC,C,CACA;;AAEA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,UAAU,GAAG,YAAW;AAC1B,UAAI;AACAH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,cAAME,KAAK,GAAG,MAAMC,GAAG,CAACC,WAAJ,CAAgBV,OAAhB,CAApB;AACA,cAAMW,OAAO,GAAG,MAAMF,GAAG,CAACG,YAAJ,CAAiBZ,OAAjB,CAAtB,CALA,CAMA;;AACA,cAAMa,SAAS,GAAGF,OAAO,CAACG,IAAR,CAAaC,MAAb,CACdC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UADX,CAAlB,CAPA,CAUA;;AACAf,QAAAA,QAAQ,CAAC,EACL,GAAGM,KADE;AAELU,UAAAA,MAAM,EAAEP,OAAO,CAACQ,IAFX;AAGLN,UAAAA;AAHK,SAAD,CAAR;AAMAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAlBD,CAkBE,OAAOC,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,KAtBD;;AAuBAC,IAAAA,UAAU;AACb,GAzBQ,EAyBN,CAACP,OAAD,CAzBM,CAAT;AA2BA,SAAO;AAACC,IAAAA,KAAD;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH,CAjCM;;GAAMN,a","sourcesContent":["import {useState, useEffect} from 'react';\n// import API from '../API';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState({});\n    const [error, setError] = useState({});\n\n    useEffect(() => {\n        const fetchMovie = async() => {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovies(movieId);\n                const credits = await API.fetchCredits(movieId);\n                //Directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n                //exporting state object\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                });\n\n                setLoading(false);\n            } catch (error) {\n                setError(true);\n            }\n        };\n        fetchMovie();\n    }, [movieId])\n\n    return {state, loading, error};\n}"]},"metadata":{},"sourceType":"module"}